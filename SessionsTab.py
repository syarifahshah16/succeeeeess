#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.3 on Thu Sep  6 00:17:50 2018
#

import wx
import connectdb
import os
import sqlite3
from sqlite3 import Error
from subprocess import Popen, PIPE

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
style=wx.BORDER_NONE
# end wxGlade


class TabPanel(wx.Panel):
    def __init__(self, parent, caseDetails, evidenceDetails):
        # begin wxGlade: MyFrame.__init__
        wx.Panel.__init__(self, parent=parent)
        self.tsharktab = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.packetsList = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.tsharktab.SetMinSize((965, 280))
        self.packetsList.SetMinSize((965, 350))
        self.packetsList.SetBackgroundColour(wx.Colour(211, 211, 211))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.tsharktab, 0, 0, 0)
        sizer_2.Add(self.packetsList, 0, wx.TOP, 27)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def onSelNetworkPcapFiles(self, event):
        process = Popen(['sudo', 'tshark', '-r', 'test.pcap'], stdout=PIPE, stderr=PIPE)
        stdout, stderr = process.communicate()
        self.tsharktab.SetValue(stdout)

        process = Popen(['sudo', 'tcpdump', '-qns', '0', '-x', '-r', 'test.pcap'], stdout=PIPE, stderr=PIPE)
        stdout, stderr = process.communicate()
        self.packetsList.SetValue(stdout)


    """def addEvidence(self, mainSizer, imgName, imgSize, imgMd5):
        self.text_ctrl1 = wx.TextCtrl(self.panel_2, wx.ID_ANY, str(imgMd5), style=wx.TE_READONLY | wx.BORDER_NONE)
        self.text_ctrl2 = wx.TextCtrl(self.panel_2, wx.ID_ANY, "{imgSize} bytes".format(imgSize=imgSize), style=wx.TE_READONLY | wx.BORDER_NONE)
        self.text_ctrl3 = wx.TextCtrl(self.panel_2, wx.ID_ANY, evidenceAddDate, style=wx.TE_READONLY | wx.BORDER_NONE)
        self.text_ctrl4 = wx.TextCtrl(self.panel_2, wx.ID_ANY, imgName, style=wx.TE_CENTRE | wx.TE_READONLY | wx.BORDER_NONE)

        self.text_ctrl1.SetBackgroundColour(wx.Colour(235, 235, 235))
        self.text_ctrl2.SetBackgroundColour(wx.Colour(235, 235, 235))
        self.text_ctrl3.SetBackgroundColour(wx.Colour(235, 235, 235))
        self.text_ctrl4.SetBackgroundColour(wx.Colour(235, 235, 235))

        gridSizer = wx.FlexGridSizer(0, 2, 0, 0)
        infoSizer = wx.BoxSizer(wx.VERTICAL)
        gridSizer.Add((30, 28), 0, 0, 0)
        gridSizer.Add((0, 0), 0, 0, 0)

        bitmap = wx.StaticBitmap(self.panel_2, wx.ID_ANY, wx.Bitmap("hdd.png", wx.BITMAP_TYPE_ANY))

        gridSizer.Add(bitmap, 1, wx.ALL, 7)
        lblMd5 = wx.StaticText(self.panel_2, wx.ID_ANY, "Md5 Hash:")
        infoSizer.Add(lblMd5, 0, wx.ALL, 5)
        infoSizer.Add(self.text_ctrl1, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 5)
        lblSize = wx.StaticText(self.panel_2, wx.ID_ANY, "Size:")
        infoSizer.Add(lblSize, 0, wx.ALL, 5)
        infoSizer.Add(self.text_ctrl2, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 5)
        lblDateAdded = wx.StaticText(self.panel_2, wx.ID_ANY, "Date/time added")
        infoSizer.Add(lblDateAdded, 0, wx.ALL, 5)
        infoSizer.Add(self.text_ctrl3, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 5)
        gridSizer.Add(infoSizer, 1, wx.EXPAND, 0)
        gridSizer.Add(self.text_ctrl4, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT | wx.RIGHT, 5)
        gridSizer.Add((0, 0), 0, 0, 0)
        mainSizer.Add(gridSizer, 0, wx.BOTTOM | wx.EXPAND | wx.LEFT, 6)"""
# end of class MyFrame
